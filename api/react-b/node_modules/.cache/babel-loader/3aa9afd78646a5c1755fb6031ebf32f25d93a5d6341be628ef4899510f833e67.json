{"ast":null,"code":"var _jsxFileName = \"/home/elai/react-b/react-b/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const url3 = \"http://localhost:8080/result\";\n  const [data, setData] = useState([]);\n  const fetchInfor = () => {\n    return fetch(url3).then(res => res.json).then(d => setData(d));\n  };\n  useEffect(() => {\n    fetchInfor();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"green\"\n        },\n        children: \"using JavaScript inbuilt FETCH API\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n        children: data.map((dataObj, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"15em\",\n              backgroundColor: \"#35D841\",\n              padding: 2,\n              borderRadius: 10,\n              marginBlock: 10\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: 20,\n                color: 'white'\n              },\n              children: dataObj.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), \");\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n// function App() {\n//   const [items, setItems] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch data using axios\n//     axios.get('http://localhost:8080/')\n//       .then(response => {\n//         // Assuming response.data is an array of items\n//         setItems(response.data);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching data: ', error);\n//       });\n//   }, []); // Empty dependency array means this effect runs once after the initial render\n\n//   return (\n//     <div>\n//       <header><h1>EXPENDITURE MANIPULATION</h1></header>\n//       <div>\n//         <table>\n//           <thead>\n//             <tr>\n//               <th><b>ID</b></th>\n//               <th><b>FIRSTNAME</b></th>\n//               <th><b>LASTNAME</b></th>\n//               <th><b>AMOUNT</b></th>\n//               <th><b>CATEGORY</b></th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {items.map((item, index) => (\n//               <tr key={index}>\n//                 <td>{item.id}</td>\n//                 <td>{item.firstName}</td>\n//                 <td>{item.lastName}</td>\n//                 <td>{item.amount}</td>\n//                 <td>{item.category}</td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       </div>\n//     </div>\n//   );\n// }\n_s(App, \"p3kf31JVIDGdau1C3XV5g5OYuhI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","url3","data","setData","fetchInfor","fetch","then","res","json","d","children","className","style","color","fileName","_jsxFileName","lineNumber","columnNumber","map","dataObj","index","width","backgroundColor","padding","borderRadius","marginBlock","fontSize","name","_c","$RefreshReg$"],"sources":["/home/elai/react-b/react-b/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n\nfunction App(){\n  \n  const url3 = \"http://localhost:8080/result\" \n  const [data ,setData] = useState([]);\n  const fetchInfor =()=>{\n    return fetch(url3).then((res)=>res.json).then((d)=> setData(d))\n  }\n  useEffect(()=>{\n    fetchInfor()\n  },[])\n  return(\n    <div>\n        <div className=\"App\">\n      <h1 style={{ color: \"green\" }}>using JavaScript inbuilt FETCH API</h1>\n      <center>\n        {data.map((dataObj, index) => {\n          return (\n            <div\n              style={{\n                width: \"15em\",\n                backgroundColor: \"#35D841\",\n                padding: 2,\n                borderRadius: 10,\n                marginBlock: 10,\n              }}\n            > \n            <p style={{ fontSize: 20, color: 'white' }}>{dataObj.name}</p>\n            </div>\n          );\n        })}\n      </center>\n    </div>\n  );\n\n    </div>\n  )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// function App() {\n//   const [items, setItems] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch data using axios\n//     axios.get('http://localhost:8080/')\n//       .then(response => {\n//         // Assuming response.data is an array of items\n//         setItems(response.data);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching data: ', error);\n//       });\n//   }, []); // Empty dependency array means this effect runs once after the initial render\n\n//   return (\n//     <div>\n//       <header><h1>EXPENDITURE MANIPULATION</h1></header>\n//       <div>\n//         <table>\n//           <thead>\n//             <tr>\n//               <th><b>ID</b></th>\n//               <th><b>FIRSTNAME</b></th>\n//               <th><b>LASTNAME</b></th>\n//               <th><b>AMOUNT</b></th>\n//               <th><b>CATEGORY</b></th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {items.map((item, index) => (\n//               <tr key={index}>\n//                 <td>{item.id}</td>\n//                 <td>{item.firstName}</td>\n//                 <td>{item.lastName}</td>\n//                 <td>{item.amount}</td>\n//                 <td>{item.category}</td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       </div>\n//     </div>\n//   );\n// }\n\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,GAAGA,CAAA,EAAE;EAAAC,EAAA;EAEZ,MAAMC,IAAI,GAAG,8BAA8B;EAC3C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMS,UAAU,GAAEA,CAAA,KAAI;IACpB,OAAOC,KAAK,CAACJ,IAAI,CAAC,CAACK,IAAI,CAAEC,GAAG,IAAGA,GAAG,CAACC,IAAI,CAAC,CAACF,IAAI,CAAEG,CAAC,IAAIN,OAAO,CAACM,CAAC,CAAC,CAAC;EACjE,CAAC;EACDb,SAAS,CAAC,MAAI;IACZQ,UAAU,CAAC,CAAC;EACd,CAAC,EAAC,EAAE,CAAC;EACL,oBACEN,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAKa,SAAS,EAAC,KAAK;MAAAD,QAAA,gBACtBZ,OAAA;QAAIc,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAQ,CAAE;QAAAH,QAAA,EAAC;MAAkC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtEnB,OAAA;QAAAY,QAAA,EACGR,IAAI,CAACgB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;UAC5B,oBACEtB,OAAA;YACEc,KAAK,EAAE;cACLS,KAAK,EAAE,MAAM;cACbC,eAAe,EAAE,SAAS;cAC1BC,OAAO,EAAE,CAAC;cACVC,YAAY,EAAE,EAAE;cAChBC,WAAW,EAAE;YACf,CAAE;YAAAf,QAAA,eAEJZ,OAAA;cAAGc,KAAK,EAAE;gBAAEc,QAAQ,EAAE,EAAE;gBAAEb,KAAK,EAAE;cAAQ,CAAE;cAAAH,QAAA,EAAES,OAAO,CAACQ;YAAI;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzD,CAAC;QAEV,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,MAGN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEV;;AA4BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAjB,EAAA,CA5GSD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AA+GZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}