{"ast":null,"code":"var _jsxFileName = \"/home/elai/react-b/react-b/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [formData] = useState({\n    id: 1,\n    firstName: \"\",\n    lastName: \"\",\n    amount: 3000,\n    category: \"\"\n  });\n  const [responseData, setResponseData] = useState(null);\n  const handleSubmit = useCallback(async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/result\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to submit data\");\n      }\n      const responseData = await response.text(); // Get response as text\n      console.log(\"Response:\", responseData); // Log the response\n      const data = JSON.parse(responseData); // Parse the response as JSON\n      setResponseData(data);\n    } catch (error) {\n      console.error(\"Error submitting data:\", error);\n    }\n  }, [formData]); //Include handleSubmit in the dependency array\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: responseData && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"ID: \", responseData.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"First Name: \", responseData.firstName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Last Name: \", responseData.lastName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Amount: \", responseData.amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Category: \", responseData.category]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"JP+rLtDtETUSCP6LkZQUeRnapJA=\");\n_c = App;\nexport default App;\n\n// import React, { useState} from \"react\";\n\n// function App() {\n//     const [formData, setFormData] = useState({\n//         id:1,\n//         firstName:\"\",\n//         lastName:\"\",\n//         amount:3000,\n//         category:\"\"\n\n//     });\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         try {\n//             const response = await fetch(\"/http://localhost:8080/result\", {\n//                 method: \"POST\",\n//                 headers: {\n//                     \"Content-Type\": \"application/json\"\n//                 },\n//                 body: JSON.stringify(formData)\n//             });\n//             if (!response.ok) {\n//                 throw new Error(\"Failed to submit data\");\n//             }\n//             const responseData = await response.json();\n//             console.log(\"Server response:\", responseData);\n//         } catch (error) {\n//             console.error(\"Error submitting data:\", error);\n//         }\n\n//     };\n\n//     return (\n//         <div>\n//             {/* <form onSubmit={handleSubmit}>\n//                 <input type=\"text\" name=\"id\" value={formData.id} onChange={handleValue} placeholder=\"your id\" /><br /><br />\n//                 <input type=\"text\" name=\"firstName\" value={formData.firstName} onChange={handleValue} placeholder=\"your first name\" /><br /><br />\n//                 <input type=\"text\" name=\"lastName\" value={formData.lastName} onChange={handleValue} placeholder=\"your last name\" /><br /><br />\n//                 <input type=\"text\" name=\"amount\" value={formData.amount} onChange={handleValue} placeholder=\"your amount\" /><br /><br />\n//                 <input type=\"text\" name=\"category\" value={formData.category} onChange={handleValue} placeholder=\"your category\" /><br /><br />\n//                 <button type=\"submit\">Submit</button>\n//             </form> */}\n\n//             <div onLoad={handleSubmit} >\n//             {formData.id}\n//             {formData.firstName}\n//             {formData.lastName}\n//             {formData.amount}\n//             {formData.category}\n//             </div>\n\n//         </div>\n\n//     );\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","App","_s","formData","id","firstName","lastName","amount","category","responseData","setResponseData","handleSubmit","response","fetch","method","headers","body","JSON","stringify","ok","Error","text","console","log","data","parse","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/elai/react-b/react-b/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\n\nfunction App() {\n    const [formData] = useState({\n        id: 1,\n        firstName: \"\",\n        lastName: \"\",\n        amount: 3000,\n        category: \"\"\n    });\n    const [responseData, setResponseData] = useState(null);\n\n    const handleSubmit = useCallback(async () => {\n        try {\n            const response = await fetch(\"http://localhost:8080/result\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(formData)\n            });\n            if (!response.ok) {\n                throw new Error(\"Failed to submit data\");\n            }\n            const responseData = await response.text(); // Get response as text\n            console.log(\"Response:\", responseData); // Log the response\n            const data = JSON.parse(responseData); // Parse the response as JSON\n            setResponseData(data);\n        } catch (error) {\n            console.error(\"Error submitting data:\", error);\n        }\n    }, [formData]);//Include handleSubmit in the dependency array\n\n    return (\n        <div>\n            <div>\n                {responseData && (\n                    <div>\n                        <p>ID: {responseData.id}</p>\n                        <p>First Name: {responseData.firstName}</p>\n                        <p>Last Name: {responseData.lastName}</p>\n                        <p>Amount: {responseData.amount}</p>\n                        <p>Category: {responseData.category}</p>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n\n\n\n\n\n\n// import React, { useState} from \"react\";\n\n// function App() {\n//     const [formData, setFormData] = useState({\n//         id:1,\n//         firstName:\"\",\n//         lastName:\"\",\n//         amount:3000,\n//         category:\"\"\n\n//     });\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         try {\n//             const response = await fetch(\"/http://localhost:8080/result\", {\n//                 method: \"POST\",\n//                 headers: {\n//                     \"Content-Type\": \"application/json\"\n//                 },\n//                 body: JSON.stringify(formData)\n//             });\n//             if (!response.ok) {\n//                 throw new Error(\"Failed to submit data\");\n//             }\n//             const responseData = await response.json();\n//             console.log(\"Server response:\", responseData);\n//         } catch (error) {\n//             console.error(\"Error submitting data:\", error);\n//         }\n        \n//     };\n\n//     return (\n//         <div>\n//             {/* <form onSubmit={handleSubmit}>\n//                 <input type=\"text\" name=\"id\" value={formData.id} onChange={handleValue} placeholder=\"your id\" /><br /><br />\n//                 <input type=\"text\" name=\"firstName\" value={formData.firstName} onChange={handleValue} placeholder=\"your first name\" /><br /><br />\n//                 <input type=\"text\" name=\"lastName\" value={formData.lastName} onChange={handleValue} placeholder=\"your last name\" /><br /><br />\n//                 <input type=\"text\" name=\"amount\" value={formData.amount} onChange={handleValue} placeholder=\"your amount\" /><br /><br />\n//                 <input type=\"text\" name=\"category\" value={formData.category} onChange={handleValue} placeholder=\"your category\" /><br /><br />\n//                 <button type=\"submit\">Submit</button>\n//             </form> */}\n\n//             <div onLoad={handleSubmit} >\n//             {formData.id}\n//             {formData.firstName}\n//             {formData.lastName}\n//             {formData.amount}\n//             {formData.category}\n//             </div>\n\n\n//         </div>\n        \n//     );\n// }\n\n// export default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}