{"ast":null,"code":"var _jsxFileName = \"/home/elai/react-b/react-b/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport cheerio from \"cheerio\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [responseData, setResponseData] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/result\");\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch data\");\n        }\n        const html = await response.text();\n        const $ = cheerio.load(html);\n        const results = {};\n        // Extract data from HTML using Cheerio selectors\n        results.id = $(\"label[for='id']\").text().trim();\n        results.firstName = $(\"label[for='firstName']\").text().trim();\n        results.lastName = $(\"label[for='lastName']\").text().trim();\n        results.amount = $(\"label[for='amount']\").text().trim();\n        results.category = $(\"label[for='category']\").text().trim();\n        setResponseData(results);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: responseData && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"ID: \", responseData.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"First Name: \", responseData.firstName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Last Name: \", responseData.lastName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Amount: \", responseData.amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Category: \", responseData.category]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"o6lnEzgCLrCVITSCv0+t3LgWYVU=\");\n_c = App;\nexport default App;\n\n// import React, { useState} from \"react\";\n\n// function App() {\n//     const [formData, setFormData] = useState({\n//         id:1,\n//         firstName:\"\",\n//         lastName:\"\",\n//         amount:3000,\n//         category:\"\"\n\n//     });\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         try {\n//             const response = await fetch(\"/http://localhost:8080/result\", {\n//                 method: \"POST\",\n//                 headers: {\n//                     \"Content-Type\": \"application/json\"\n//                 },\n//                 body: JSON.stringify(formData)\n//             });\n//             if (!response.ok) {\n//                 throw new Error(\"Failed to submit data\");\n//             }\n//             const responseData = await response.json();\n//             console.log(\"Server response:\", responseData);\n//         } catch (error) {\n//             console.error(\"Error submitting data:\", error);\n//         }\n\n//     };\n\n//     return (\n//         <div>\n//             {/* <form onSubmit={handleSubmit}>\n//                 <input type=\"text\" name=\"id\" value={formData.id} onChange={handleValue} placeholder=\"your id\" /><br /><br />\n//                 <input type=\"text\" name=\"firstName\" value={formData.firstName} onChange={handleValue} placeholder=\"your first name\" /><br /><br />\n//                 <input type=\"text\" name=\"lastName\" value={formData.lastName} onChange={handleValue} placeholder=\"your last name\" /><br /><br />\n//                 <input type=\"text\" name=\"amount\" value={formData.amount} onChange={handleValue} placeholder=\"your amount\" /><br /><br />\n//                 <input type=\"text\" name=\"category\" value={formData.category} onChange={handleValue} placeholder=\"your category\" /><br /><br />\n//                 <button type=\"submit\">Submit</button>\n//             </form> */}\n\n//             <div onLoad={handleSubmit} >\n//             {formData.id}\n//             {formData.firstName}\n//             {formData.lastName}\n//             {formData.amount}\n//             {formData.category}\n//             </div>\n\n//         </div>\n\n//     );\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","cheerio","jsxDEV","_jsxDEV","App","_s","responseData","setResponseData","fetchData","response","fetch","ok","Error","html","text","$","load","results","id","trim","firstName","lastName","amount","category","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/elai/react-b/react-b/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport cheerio from \"cheerio\";\n\nfunction App() {\n    const [responseData, setResponseData] = useState(null);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await fetch(\"http://localhost:8080/result\");\n                if (!response.ok) {\n                    throw new Error(\"Failed to fetch data\");\n                }\n                const html = await response.text();\n                const $ = cheerio.load(html);\n                const results = {};\n                // Extract data from HTML using Cheerio selectors\n                results.id = $(\"label[for='id']\").text().trim();\n                results.firstName = $(\"label[for='firstName']\").text().trim();\n                results.lastName = $(\"label[for='lastName']\").text().trim();\n                results.amount = $(\"label[for='amount']\").text().trim();\n                results.category = $(\"label[for='category']\").text().trim();\n                setResponseData(results);\n            } catch (error) {\n                console.error(\"Error fetching data:\", error);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    return (\n        <div>\n            <div>\n                {responseData && (\n                    <div>\n                        <p>ID: {responseData.id}</p>\n                        <p>First Name: {responseData.firstName}</p>\n                        <p>Last Name: {responseData.lastName}</p>\n                        <p>Amount: {responseData.amount}</p>\n                        <p>Category: {responseData.category}</p>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n\n\n\n\n\n\n// import React, { useState} from \"react\";\n\n// function App() {\n//     const [formData, setFormData] = useState({\n//         id:1,\n//         firstName:\"\",\n//         lastName:\"\",\n//         amount:3000,\n//         category:\"\"\n\n//     });\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         try {\n//             const response = await fetch(\"/http://localhost:8080/result\", {\n//                 method: \"POST\",\n//                 headers: {\n//                     \"Content-Type\": \"application/json\"\n//                 },\n//                 body: JSON.stringify(formData)\n//             });\n//             if (!response.ok) {\n//                 throw new Error(\"Failed to submit data\");\n//             }\n//             const responseData = await response.json();\n//             console.log(\"Server response:\", responseData);\n//         } catch (error) {\n//             console.error(\"Error submitting data:\", error);\n//         }\n        \n//     };\n\n//     return (\n//         <div>\n//             {/* <form onSubmit={handleSubmit}>\n//                 <input type=\"text\" name=\"id\" value={formData.id} onChange={handleValue} placeholder=\"your id\" /><br /><br />\n//                 <input type=\"text\" name=\"firstName\" value={formData.firstName} onChange={handleValue} placeholder=\"your first name\" /><br /><br />\n//                 <input type=\"text\" name=\"lastName\" value={formData.lastName} onChange={handleValue} placeholder=\"your last name\" /><br /><br />\n//                 <input type=\"text\" name=\"amount\" value={formData.amount} onChange={handleValue} placeholder=\"your amount\" /><br /><br />\n//                 <input type=\"text\" name=\"category\" value={formData.category} onChange={handleValue} placeholder=\"your category\" /><br /><br />\n//                 <button type=\"submit\">Submit</button>\n//             </form> */}\n\n//             <div onLoad={handleSubmit} >\n//             {formData.id}\n//             {formData.firstName}\n//             {formData.lastName}\n//             {formData.amount}\n//             {formData.category}\n//             </div>\n\n\n//         </div>\n        \n//     );\n// }\n\n// export default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}