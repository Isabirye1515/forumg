{"ast":null,"code":"var _jsxFileName = \"/home/elai/react-b/react-b/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [formData, setFormData] = useState({\n    id: 1,\n    firstName: \"\",\n    lastName: \"\",\n    amount: 3000,\n    category: \"\"\n  });\n  const handleValue = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"/http://localhost:8080/result\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to submit data\");\n      }\n      const responseData = await response.json();\n      console.log(\"Server response:\", responseData);\n    } catch (error) {\n      console.error(\"Error submitting data:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      onLoad: hansle,\n      children: [formData.id, formData.firstName, formData.lastName, formData.amount, formData.category]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"LQwAGVzU/YnNWDCZcSEm/P/Cu4k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","formData","setFormData","id","firstName","lastName","amount","category","handleValue","e","target","name","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","responseData","json","console","log","error","children","onLoad","hansle","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/elai/react-b/react-b/src/App.jsx"],"sourcesContent":["import React, { useState} from \"react\";\n\nfunction App() {\n    const [formData, setFormData] = useState({\n        id:1,\n        firstName:\"\",\n        lastName:\"\",\n        amount:3000,\n        category:\"\"\n\n    });\n\n    const handleValue = (e) => {\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await fetch(\"/http://localhost:8080/result\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(formData)\n            });\n            if (!response.ok) {\n                throw new Error(\"Failed to submit data\");\n            }\n            const responseData = await response.json();\n            console.log(\"Server response:\", responseData);\n        } catch (error) {\n            console.error(\"Error submitting data:\", error);\n        }\n        \n    };\n\n    return (\n        <div>\n            {/* <form onSubmit={handleSubmit}>\n                <input type=\"text\" name=\"id\" value={formData.id} onChange={handleValue} placeholder=\"your id\" /><br /><br />\n                <input type=\"text\" name=\"firstName\" value={formData.firstName} onChange={handleValue} placeholder=\"your first name\" /><br /><br />\n                <input type=\"text\" name=\"lastName\" value={formData.lastName} onChange={handleValue} placeholder=\"your last name\" /><br /><br />\n                <input type=\"text\" name=\"amount\" value={formData.amount} onChange={handleValue} placeholder=\"your amount\" /><br /><br />\n                <input type=\"text\" name=\"category\" value={formData.category} onChange={handleValue} placeholder=\"your category\" /><br /><br />\n                <button type=\"submit\">Submit</button>\n            </form> */}\n\n            <div onLoad={hansle} >\n            {formData.id}\n            {formData.firstName}\n            {formData.lastName}\n            {formData.amount}\n            {formData.category}\n            </div>\n\n\n        </div>\n        \n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC;IACrCO,EAAE,EAAC,CAAC;IACJC,SAAS,EAAC,EAAE;IACZC,QAAQ,EAAC,EAAE;IACXC,MAAM,EAAC,IAAI;IACXC,QAAQ,EAAC;EAEb,CAAC,CAAC;EAEF,MAAMC,WAAW,GAAIC,CAAC,IAAK;IACvBP,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACQ,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EACjE,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAC9BA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;QAC1DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACpB,QAAQ;MACjC,CAAC,CAAC;MACF,IAAI,CAACc,QAAQ,CAACO,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC5C;MACA,MAAMC,YAAY,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAC1CC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,YAAY,CAAC;IACjD,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EAEJ,CAAC;EAED,oBACI9B,OAAA;IAAA+B,QAAA,eAUI/B,OAAA;MAAKgC,MAAM,EAAEC,MAAO;MAAAF,QAAA,GACnB5B,QAAQ,CAACE,EAAE,EACXF,QAAQ,CAACG,SAAS,EAClBH,QAAQ,CAACI,QAAQ,EACjBJ,QAAQ,CAACK,MAAM,EACfL,QAAQ,CAACM,QAAQ;IAAA;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGL,CAAC;AAGd;AAACnC,EAAA,CA1DQD,GAAG;AAAAqC,EAAA,GAAHrC,GAAG;AA4DZ,eAAeA,GAAG;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}